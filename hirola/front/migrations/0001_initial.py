# Generated by Django 2.0.2 on 2019-02-14 21:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import front.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'The email address you entered has already been registered.'}, max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first_name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last_name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_joined')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_change_allowed', models.BooleanField(default=False, help_text='Designates whether this user has been authorized to change his ownpassword, in the change_password view.', verbose_name='change_allowed')),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('change_email', models.EmailField(blank=True, default=None, error_messages={'unique': 'The email address you entered has already been registered.'}, max_length=255, null=True, unique=True, verbose_name='email address')),
                ('change_email_tracker', models.DateTimeField(blank=True, default=None, null=True, verbose_name='change_email_tracker')),
                ('former_email', models.EmailField(blank=True, default=None, max_length=255, null=True, verbose_name='email address')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line_one', models.CharField(max_length=255)),
                ('address_line_two', models.CharField(blank=True, max_length=255, null=True)),
                ('short_description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('total_price', front.models.IntegerRangeField(default=0)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='CountryCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.IntegerField(default=254, unique=True)),
                ('country', models.CharField(default='Kenya', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_abbreviation', models.CharField(max_length=30)),
                ('currency_long_form', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='HotDeal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='InactiveUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first_name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last_name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_joined')),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('change_email', models.EmailField(blank=True, default=None, max_length=255, null=True, verbose_name='email address')),
                ('change_email_tracker', models.DateTimeField(blank=True, default=None, null=True, verbose_name='change_email_tracker')),
                ('former_email', models.EmailField(blank=True, default=None, max_length=255, null=True, verbose_name='email address')),
                ('password', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('country_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.CountryCode')),
            ],
        ),
        migrations.CreateModel(
            name='ItemIcon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_icon', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='NewsItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('source', models.CharField(max_length=256)),
                ('link', models.CharField(max_length=256)),
                ('date_created', models.DateField(verbose_name='date_created')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('quantity', front.models.IntegerRangeField()),
                ('price', models.DecimalField(decimal_places=0, max_digits=6)),
                ('size', models.CharField(blank=True, max_length=4, null=True)),
                ('total_price', front.models.IntegerRangeField(default=0)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='front.Cart')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default=None, max_length=60)),
            ],
            options={
                'verbose_name_plural': "Order Status'",
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(default='Cash', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_category', models.CharField(default=None, max_length=15, unique=True)),
                ('category_image', models.ImageField(blank=True, null=True, upload_to='phone_categories')),
            ],
            options={
                'verbose_name_plural': 'Phone Categories',
            },
        ),
        migrations.CreateModel(
            name='PhoneImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='phones')),
            ],
        ),
        migrations.CreateModel(
            name='PhoneList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_name', models.CharField(default=None, max_length=255)),
                ('price', models.DecimalField(decimal_places=0, max_digits=6)),
                ('average_review', models.DecimalField(decimal_places=1, default=5.0, max_digits=2)),
                ('main_image', models.ImageField(upload_to='phones')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.PhoneCategory')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.Currency')),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.ItemIcon')),
            ],
            options={
                'verbose_name_plural': 'Phones',
            },
        ),
        migrations.CreateModel(
            name='PhoneMemorySize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbreviation', models.CharField(max_length=10)),
                ('size_number', models.IntegerField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.PhoneCategory')),
            ],
        ),
        migrations.CreateModel(
            name='PhonesColor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=0, max_digits=6)),
                ('quantity', front.models.IntegerRangeField()),
                ('is_in_stock', models.BooleanField(default=False, help_text='Designates whether this phone                                               color is in stock. Unselect this instead of                                               deleting phone color.', verbose_name='in_stock')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.Color')),
                ('phone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phone_color_quantity', to='front.PhoneList')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.PhoneMemorySize')),
            ],
        ),
        migrations.CreateModel(
            name='ProductInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=256)),
                ('value', models.CharField(max_length=256)),
                ('phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_information', to='front.PhoneList')),
            ],
        ),
        migrations.CreateModel(
            name='RepairService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repair_service', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', front.models.IntegerRangeField()),
                ('comments', models.TextField()),
                ('time', models.DateField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_reviews', to='front.PhoneList')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.RepairService')),
            ],
        ),
        migrations.CreateModel(
            name='ServicePerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('name_of_premise', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('phone_number', models.IntegerField()),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'The email address you entered has already been registered.'}, max_length=255, null=True, unique=True, verbose_name='email address')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.Address')),
                ('country_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.CountryCode')),
            ],
            options={
                'verbose_name_plural': 'ServicePeople',
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('recepient', models.CharField(blank=True, max_length=255, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_address', to='front.Order')),
            ],
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_link', models.URLField()),
                ('icon', models.CharField(blank=True, default='', max_length=60)),
                ('name', models.CharField(default=None, max_length=60)),
            ],
            options={
                'verbose_name_plural': 'Social Media',
            },
        ),
        migrations.AddField(
            model_name='service',
            name='service_man',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.ServicePerson'),
        ),
        migrations.AddField(
            model_name='phonelist',
            name='size_sku',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.PhoneMemorySize'),
        ),
        migrations.AddField(
            model_name='phoneimage',
            name='phone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_images', to='front.PhoneList'),
        ),
        migrations.AddField(
            model_name='order',
            name='payment_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='order',
            name='phone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='front.PhoneList'),
        ),
        migrations.AddField(
            model_name='order',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='front.OrderStatus'),
        ),
        migrations.AddField(
            model_name='hotdeal',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='front.PhoneList'),
        ),
        migrations.AddField(
            model_name='feature',
            name='phone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_features', to='front.PhoneList'),
        ),
        migrations.AddField(
            model_name='cart',
            name='payment_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='user',
            name='country_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='front.CountryCode'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='service',
            unique_together={('service', 'service_man')},
        ),
        migrations.AlterUniqueTogether(
            name='phonescolor',
            unique_together={('phone', 'size')},
        ),
    ]
